{
  "name": "Angular-tag",
  "tagline": "Tags input directive for AngularJS. ",
  "body": "# angular-tag\r\n\r\n[![Build Status](https://travis-ci.org/theo4u/angular-tag.svg?branch=master)](https://travis-ci.org/theo4u/angular-tag) \r\n[![David](https://img.shields.io/david/dev/theo4u/angular-tag.svg)]()\r\n[![npm](https://img.shields.io/npm/v/angular-tag.svg)](https://www.npmjs.com/package/angular-tag) [![Bower](https://img.shields.io/bower/v/angular-tag.svg)](http://bower.io/search/?q=angular-tag)\r\n\r\n\r\nTags input directive for AngularJS. Check out the ReadMe on  [angular-tag website](http://theo4u.github.io/angular-tag/) for more information.\r\n\r\n![angular-tag](https://www.googledrive.com/host/0B9WhZZgFzvoBamRRTFlXc19JRXc)\r\n\r\n## Requirements\r\n\r\n- [Angular.js 1.3+](http://angularjs.org) \r\n- [ngAnimate](https://docs.angularjs.org/api/ngAnimate) (optional for typehead animation)\r\n\r\n## Installation\r\n### Add library\r\nThis module is available as bower package, install it with this command:\r\n\r\n```bash\r\nbower install angular-tag\r\n```\r\n\r\nand it's available too as npm package, install it with this command:\r\n\r\n```bash\r\nnpm install angular-tag\r\n```\r\n\r\nor you may download the [latest release](https://github.com/theo4u/angular-tag/releases)\r\n\r\n### Include library\r\n```html\r\n<link href=\"/angular-tag/angular-tag.min.css\" rel=\"stylesheet\" />\r\n<script src=\"angular/angular.js\"></script>\r\n<script type=\"text/javascript\" src=\"/angular-tag/angular-tag.min.js\"></script>\r\n```\r\n### Add dependency\r\n\r\n```javascript\r\nvar app = angular.module('myModule', ['angular-tag']);\r\n```\r\n  \r\n## Example\r\n `/example.html` check the plunker above\r\n \r\n## Options\r\nThe tag works separately with the options based on the value\r\n### theme \r\n    it comes with two themes which can take the value of `default` or `material`. if used optionally it takes\r\n     the default of `default`\r\n### type\r\n    for now the type is just for `input`\r\n### data\r\n    if set , is where what `angular-tag` use in our data set to check if the entered item match any of the \r\n    fields/items in it or in filtering **typehead**\r\n### selected\r\n    return the selected item(s)/tags here, which can be used for other processing\r\n### sameInput\r\n    to allow same input , that is a selected item can appear more than once in our tagging system, \r\n    takes either `true` or `false`\r\n### allowOutsideDataSet \r\n    if the allowed input should be outside the data set specified in `data` , takes either `true` or `false`\r\n### typehead\r\n    used in turning type head to assist users when typing or not , takes either `true` or `false`, if animation is wanted \r\n    simply inject ngAnimate to your app module to see the type head in action\r\n### displayField\r\n    field to display to the user in the data set to the tag view , i.e which field to show to the user \r\n    when typing or when adding tag, default if not specified uses the `text` object field parameter like in {text:'text'}\r\n### placeholder\r\n    assist users so they can use their place holders , if not placed it would use the default placeholder which is \r\n    `Enter Text with , separated`\r\n### delimeter\r\n    delimiter to separate the text entered, checks if the user hit on the delimiter activate the tag, default it uses `,` \r\n    and always uses `Enter Key` along side\r\n### max\r\n    max is used in limiting users of the number of tag that can be created , default it allows for infinity entry of tag when not specified\r\n### required\r\n    this is used when form validation is required to valid if a tag is selected and the input is empty too , then it makes the form $dirty. check the 3rd tag-me in the _example.html_ above\r\n### name\r\n    this is used along side **required** which is used in targetting a particular tag-me directive in the page in the case of many tag-me , default value is **tagMe**\r\n\r\n## Events\r\n The directive handles 4 types of events **action** which is listed below and a second parameter **item**. Each of the event uses a directive attribute to handle each of them like this **on-tag-removed='eventHandle(event)'** where `event.action` is the name of the event listed below\r\n```bash\r\n        onTagAdded //this is send along the added item object\r\n        onTagRemoved //this also send along the item object removed \r\n        onTagActive //this also send along the selected active selected tag\r\n        onTagMaximum //this event is also triggered with the input typed returned too\r\n```\r\n and `event.item` is the tag object or accompany parameter. Used in the example html above\r\n \r\n## Demo\r\n \r\n You can see the directive in action in the [demo page](http://theo4u.github.io/angular-tag/).\r\n \r\n## Contributing\r\n \r\n### Setting up your environment\r\n\r\nHere's what you need to do before start working on the code:\r\n\r\n1. Install Node.js (0.10.22 or higher)\r\n2. Install `gulp v4` globally\r\n\r\n        npm install -g 'gulpjs/gulp.git#4.0' karma-cli\r\n3. Clone your repository\r\n\r\n        git clone https://github.com/<your_github_username>/angular-tag\r\n\r\n4. Go to the angular-tag directory\r\n\r\n        cd angular-tag\r\n\r\n5. Add the main angular-tag repo as an upstream remote\r\n\r\n        git remote add upstream https://github.com/theo4u/angular-tag\r\n\r\n6. Install the development dependencies\r\n\r\n        npm install\r\n        bower install \r\n\r\n### Building from the source code\r\n\r\nYou can build angular-tag with a single command:\r\n\r\n    gulp build\r\n \r\nThat performs all tasks needed to produce the final JavaScript and CSS files. After the build completes, a folder named `dist` will be generated containing the following files:\r\n\r\n    angular-tag.js\r\n    angular-tag.css\r\n    angular-tag.min.js\r\n    angular-tag.min.css\r\n\r\n### Running It on local server\r\n You can run it using the task below, which would run and watch any changes to our .js and .css and anything inside the **template** folder\r\n\r\n    gulp serve\r\nThe task above would run and listen for any js and run the `gulp build-js` or `gulp build-css` or `gulp template-build` for css and template respectively\r\n\r\n## License\r\n \r\n See the [LICENSE](https://github.com/theo4u/angular-tag/blob/master/LICENSE) file.\r\n \r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}